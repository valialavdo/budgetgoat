import { Pocket, Transaction } from '../services/firestoreService';

export const mockPockets: Pocket[] = [
  {
    id: '1',
    userId: 'mock-user',
    name: 'Emergency Fund',
    description: 'Emergency savings for unexpected expenses',
    amount: 5000,
    currentBalance: 2500,
    targetAmount: 5000,
    category: 'Savings',
    color: '#007BFF',
    type: 'goal',
    createdAt: new Date(),
    updatedAt: new Date(),
    isActive: true,
  },
  {
    id: '2',
    userId: 'mock-user',
    name: 'Vacation',
    description: 'Dream vacation fund',
    amount: 2000,
    currentBalance: 800,
    targetAmount: 2000,
    category: 'Travel',
    color: '#28A745',
    type: 'goal',
    createdAt: new Date(),
    updatedAt: new Date(),
    isActive: true,
  },
  {
    id: '3',
    userId: 'mock-user',
    name: 'New Car',
    description: 'Down payment for a new car',
    amount: 15000,
    currentBalance: 5000,
    targetAmount: 15000,
    category: 'Transportation',
    color: '#FF6B35',
    type: 'goal',
    createdAt: new Date(),
    updatedAt: new Date(),
    isActive: true,
  }
];

export const mockTransactions: Transaction[] = [
  {
    id: '1',
    userId: 'mock-user',
    description: 'Coffee Shop',
    amount: 4.50,
    type: 'expense',
    category: 'food',
    pocketId: '1',
    date: new Date('2024-01-15'),
    createdAt: new Date(),
    updatedAt: new Date(),
    tags: ['coffee', 'food'],
  },
  {
    id: '2',
    userId: 'mock-user',
    description: 'Salary',
    amount: 3000,
    type: 'income',
    category: 'salary',
    pocketId: '1',
    date: new Date('2024-01-14'),
    createdAt: new Date(),
    updatedAt: new Date(),
    tags: ['salary', 'income', 'recurring'],
  },
  {
    id: '3',
    userId: 'mock-user',
    description: 'Grocery Shopping',
    amount: 85.50,
    type: 'expense',
    category: 'food',
    pocketId: '2',
    date: new Date('2024-01-13'),
    createdAt: new Date(),
    updatedAt: new Date(),
    tags: ['groceries', 'food'],
  },
  {
    id: '4',
    userId: 'mock-user',
    description: 'Freelance Work',
    amount: 1200,
    type: 'income',
    category: 'freelance',
    pocketId: '3',
    date: new Date('2024-01-12'),
    createdAt: new Date(),
    updatedAt: new Date(),
    tags: ['freelance', 'income', 'recurring'],
  },
  {
    id: '5',
    userId: 'mock-user',
    description: 'Unlinked Transaction',
    amount: 25.00,
    type: 'expense',
    category: 'misc',
    pocketId: '',
    date: new Date('2024-01-11'),
    createdAt: new Date(),
    updatedAt: new Date(),
    tags: ['misc'],
  }
];

// Helper function to get pockets with type information
export const getPocketsWithType = () => {
  return mockPockets.map(pocket => ({
    ...pocket,
    type: pocket.targetAmount && pocket.targetAmount > 0 ? 'goal' : 'standard',
    transactionCount: mockTransactions.filter(t => t.pocketId === pocket.id).length,
  }));
};
